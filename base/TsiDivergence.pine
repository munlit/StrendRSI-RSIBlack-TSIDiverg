/// ╔═══════════════════════════════════╗
/// ║  Tsi & Divergences				║
/// ║  @	Allen.						║
/// ╚═══════════════════════════════════╝

//@version=5
indicator('TSI & Divergences [@Allen.]', shorttitle = 'TSI & Divs', format = format.price, precision = 4)

//// ─────────────────────────────────────────────────────────────────────

//// ───────────────────────
/// ─── Colors ──────
//// ───────────────────────

/// ─── Standard ──
	// color.aqua								= #00BCD4
	// color.blue								= #2196F3
	// color.teal								= #00897B
	// color.green								= #4CAF50
	// color.olive								= #808000
	// color.lime								= #00E676
	// color.yellow								= #FFEB3B
	// color.orange								= #FF9800
	// color.maroon								= #880E4F
	// color.red								= #FF5252
	// color.fuchsia							= #E040FB
	// color.purple								= #9C27B0
	// color.navy								= #311B92
	// color.black								= #363A45
	// color.gray								= #787B86
	// color.silver								= #B2B5BE
	// color.white								= #FFFFFF

/// ─── Ameritrade ───
	// AmeTrWhite								= #FFFFFF								// AmeritradeWhite
	// AmeTrGrayPlatinum						= #F7F7F7								// AmeritradeGrayPlatinum
	// AmeTrGrayNickel							= #F1F1F1								// AmeritradeGrayNickel
	// AmeTrGrayNickelDark20					= #C0C0C0								// AmeritradeGrayNickelDark20
	// AmeTrGrayAluminum						= #E6E7E9								// AmeritradeGrayAluminum
	// AmeTrGrayAsh								= #D8D8D8								// AmeritradeGrayAsh
	// AmeTrGrayStone							= #999999								// AmeritradeGrayStone
	// AmeTrGrayIron							= #666666								// AmeritradeGrayIron
	// AmeTrGrayCharcoal						= #333333								// AmeritradeGrayCharcoal
	// AmeTrBlack								= #000000								// AmeritradeBlack
	// AmeTrGreenCabbage						= #EBF6E9								// AmeritradeGreenCabbage
	// AmeTrGreenLight70						= #B4D6B2								// AmeritradeGreenLight70
	// AmeTrGreenLight50						= #83BC7F								// AmeritradeGreenLight50
	// AmeTrGreenNat							= #40a829								// AmeritradeGreenNat
	// AmeTrGreenLight20						= #399333								// AmeritradeGreenLight20
	// AmeTrGreen								= #087900								// AmeritradeGreen
	// AmeTrGreenDark20							= #066000								// AmeritradeGreenDark20
	// AmeTrGreenMoss							= #BEE7D3								// AmeritradeGreenMoss
	// AmeTrGreenMint							= #6DC4BC								// AmeritradeGreenMint
	// AmeTrGreenPine							= #38635A								// AmeritradeGreenPine
	// AmeTrRedRose								= #FAD1CF								// AmeritradeRedRose
	// AmeTrRedLight50							= #E08988								// AmeritradeRedLight50
	// AmeTrRedLight20							= #CD4241								// AmeritradeRedLight20
	// AmeTrRed									= #C11312								// AmeritradeRed
	// AmeTrRedDark20							= #940F0E								// AmeritradeRedDark20
	// AmeTrOrangePeach							= #FCE7CA								// AmeritradeOrangePeach
	// AmeTrOrangeCarrot						= #ED8902								// AmeritradeOrangeCarrot
	// AmeTrOOrangeYam							= #BD5310								// AmeritradeOOrangeYam
	// AmeTrBlueFrost							= #E1EEF9								// AmeritradeBlueFrost
	// AmeTrBlueLagoon							= #316486								// AmeritradeBlueLagoon
	// AmeTrBlueNavy							= #2A5673								// AmeritradeBlueNavy
	// AmeTrBlueNcean							= #64A1C6								// AmeritradeBlueNcean
	// AmeTrPurpleEggPlant						= #732181								// AmeritradePurpleEggPlant

/// ─── Axi ───
	// AxiPrimary								= #fc404d								// AxiPrimary
	// AxiSecondary								= #282424								// AxiSecondary
	// AxiAccent								= #61ce70								// AxiAccent
	// Axi7a46f22								= #d11c36								// Axi7a46f22
	// Axi1519066c								= #fc404d								// Axi1519066c
	// Axi3d4fa1a1								= #f0ebe3								// Axi3d4fa1a1
	// Axi638b46c1								= #fcd758								// Axi638b46c1
	// Axid07bac9								= #f9b4a8								// Axid07bac9
	// Axie63a114								= #2c4d5a								// Axie63a114
	// Axi8bf0845								= #a4d866								// Axi8bf0845
	// Axi75c6da1								= #282424								// Axi75c6da1
	// Axi378280f								= #45c2c7								// Axi378280f
	// Axi4de92c5								= #6caddf								// Axi4de92c5
	// Axi413dab8			   					= #00275d					            // Axi413dab8
	// Axib3fab89								= #55165c								// Axib3fab89
	// Axi548138f								= #45c2c7								// Axi548138f
	// Axi5ed9920								= #ea1616								// Axi5ed9920
	// Axi70f7335								= #dd0606								// Axi70f7335

/// ─── GrayScale ───
	// GraySFocus								= #2d7aed								// GrayScaleFocus
	// GraySWhite								= #fff									// GrayScaleWhite
	// GraySBlack								= #000									// GrayScaleBlack
	// GraySPrimaryBlackberry					= #2e234b								// GrayScalePrimaryBlackberry
	// GraySPrimaryBlackberry40					= rgba(46, 35, 75, .4))			    	// GrayScalePrimaryBlackberry40
	// GraySPrimaryBlackberry65					= rgba(46, 35, 75, .65))				// GrayScalePrimaryBlackberry65
	// GraySPrimaryCoral						= #ffb198								// GrayScalePrimaryCoral
	// GraySSecondaryForestGreen				= #244024								// GrayScaleSecondaryForestGreen
	// GraySSecondaryKeyLime					= #b5ce6f								// GrayScaleSecondaryKeyLime
	// GraySSecondaryLavender					= #c5bfe4								// GrayScaleSecondaryLavender
	// GraySSecondaryLavender40					= rgba(197, 191, 228, .4))				// GrayScaleSecondaryLavender40
	// GraySsecondaryLavender60					= rgba(197, 191, 228, .6))				// GrayScalesecondaryLavender60
	// GrayShoverWhite							= #c0bdc9								// GrayScalehoverWhite
	// GrayShoverBlackberry						= #42326b								// GrayScalehoverBlackberry
	// GraySdisabledBlackberry					= #4d4466								// GrayScaledisabledBlackberry
	// GraySactiveBlackberry					= #4d4466								// GrayScaleactiveBlackberry
	// GrayShoverCcoral							= #ffcdbd								// GrayScalehoverCcoral
	// GraySactiveCcoral						= #ff9e80								// GrayScaleactiveCcoral
	// GrayShoverGray							= #827b93								// GrayScalehoverGray
	// GrayShoverGray2							= #6d6581								// GrayScalehoverGray2
	// GraySgrayCharcoal						= #282525								// GrayScalegrayCharcoal
	// GraySgrayCharcoal70						= rgba(40, 37, 37, .7))			    	// GrayScalegrayCharcoal70
	// GraySgrayCharcoal80						= rgba(40, 37, 37, .8))			    	// GrayScalegrayCharcoal80
	// GraySgrayLight							= #f5f5f5								// GrayScalegrayLight
	// GraySgrayMedium							= #eee									// GrayScalegrayMedium
	// GraySgray70								= #696666								// GrayScalegray70
	// GraySgrayDark							= #c1c1c1								// GrayScalegrayDark
	// GraySwebSeasalt		    				= #fafafc								// GrayScalewebSeasalt
	// GraySwebDivider							= #e9e7f1								// GrayScalewebDivider
	// GraySwebBackground						= #f3f2fa								// GrayScalewebBackground
	// GraySwebSecondaryText					= #77708a								// GrayScalewebSecondaryText
	// GraySwebStroke							= #d3ceeb								// GrayScalewebStroke
	// GraySwebErrors							= #e00000								// GrayScalewebErrors
	// GraySwebService							= #2d7aed								// GrayScalewebService

/// ─── Interactive ───
	// IntAcPrimary3							= hsla(355, 85%, 46%, 0.03)		    	// InteractivePrimary3
	// IntAcPrimary5							= hsla(355, 85%, 46%, 0.05)		    	// InteractivePrimary5
	// IntAcPrimary10							= hsla(355, 85%, 46%, 0.10)		    	// InteractivePrimary10
	// IntAcPrimary20							= hsla(355, 85%, 46%, 0.20)		    	// InteractivePrimary20
	// IntAcPrimary30							= hsla(355, 85%, 46%, 0.30)		    	// InteractivePrimary30
	// IntAcPrimary40							= hsla(355, 85%, 46%, 0.40)		    	// InteractivePrimary40
	// IntAcPrimary50							= hsla(355, 85%, 46%, 0.50)		    	// InteractivePrimary50
	// IntAcPrimary60							= hsla(355, 85%, 46%, 0.60)		    	// InteractivePrimary60
	// IntAcPrimary70							= hsla(355, 85%, 46%, 0.70)		    	// InteractivePrimary70
	// IntAcPrimary80							= hsla(355, 85%, 46%, 0.80)		    	// InteractivePrimary80
	// IntAcPrimary90							= hsla(355, 85%, 46%, 0.90)		    	// InteractivePrimary90
	// IntAcPrimary								= hsla(355, 85%, 46%, 1.0)				// InteractivePrimary
	// IntAcPrimaryDark10						= hsla(355, 85%, 41%, 1.0)				// InteractivePrimaryDark10
	// IntAcPrimaryDark20						= hsla(355, 85%, 36%, 1.0)				// InteractivePrimaryDark20
	// IntAcPrimaryDark30						= hsla(355, 85%, 31%, 1.0)				// InteractivePrimaryDark30
	// IntAcPrimaryDark40						= hsla(355, 85%, 26%, 1.0)				// InteractivePrimaryDark40
	// IntAcPrimaryDark50						= hsla(355, 85%, 21%, 1.0)				// InteractivePrimaryDark50
	// IntAcSecondary3							= hsla(0, 0%, 13%, 0.03)				// InteractiveSecondary3
	// IntAcSecondary5							= hsla(0, 0%, 13%, 0.05)				// InteractiveSecondary5
	// IntAcSecondary10							= hsla(0, 0%, 13%, 0.10)				// InteractiveSecondary10
	// IntAcSecondary20							= hsla(0, 0%, 13%, 0.20)				// InteractiveSecondary20
	// IntAcSecondary30							= hsla(0, 0%, 13%, 0.30)				// InteractiveSecondary30
	// IntAcSecondary40							= hsla(0, 0%, 13%, 0.40)				// InteractiveSecondary40
	// IntAcSecondary50							= hsla(0, 0%, 13%, 0.50)				// InteractiveSecondary50
	// IntAcSecondary60							= hsla(0, 0%, 13%, 0.60)				// InteractiveSecondary60
	// IntAcSecondary70							= hsla(0, 0%, 13%, 0.70)				// InteractiveSecondary70
	// IntAcSecondary80							= hsla(0, 0%, 13%, 0.80)				// InteractiveSecondary80
	// IntAcSecondary90							= hsla(0, 0%, 13%, 0.90)				// InteractiveSecondary90
	// IntAcSecondary							= hsla(0, 0%, 13%, 1.0)			    	// InteractiveSecondary
	// IntAcSecondaryDark10						= hsla(0, 0%, 10%, 1.0)			    	// InteractiveSecondaryDark10
	// IntAcSecondaryDark20						= hsla(0, 0%, 7%, 1.0)					// InteractiveSecondaryDark20
	// IntAcSecondaryDark30						= hsla(0, 0%, 4%, 1.0)					// InteractiveSecondaryDark30
	// IntAcSecondaryDark40						= hsla(0, 0%, 1%, 1.0)					// InteractiveSecondaryDark40
	// IntAcSecondaryDark50						= hsla(0, 0%, 0%, 1.0)					// InteractiveSecondaryDark50
	// IntAcTertiary3							= hsla(202, 76%, 19%, 0.03)		    	// InteractiveTertiary3
	// IntAcTertiary5							= hsla(202, 76%, 19%, 0.05)		    	// InteractiveTertiary5
	// IntAcTertiary10							= hsla(202, 76%, 19%, 0.10)		    	// InteractiveTertiary10
	// IntAcTertiary20							= hsla(202, 76%, 19%, 0.20)		    	// InteractiveTertiary20
	// IntAcTertiary30							= hsla(202, 76%, 19%, 0.30)		    	// InteractiveTertiary30
	// IntAcTertiary40							= hsla(202, 76%, 19%, 0.40)		    	// InteractiveTertiary40
	// IntAcTertiary50							= hsla(202, 76%, 19%, 0.50)		    	// InteractiveTertiary50
	// IntAcTertiary60							= hsla(202, 76%, 19%, 0.60)		    	// InteractiveTertiary60
	// IntAcTertiary70							= hsla(202, 76%, 19%, 0.70)		    	// InteractiveTertiary70
	// IntAcTertiary80							= hsla(202, 76%, 19%, 0.80)		    	// InteractiveTertiary80
	// IntAcTertiary90							= hsla(202, 76%, 19%, 0.90)		    	// InteractiveTertiary90
	// IntAcTertiary							= hsla(202, 76%, 19%, 1.0)				// InteractiveTertiary
	// IntAcTertiaryDark10						= hsla(202, 76%, 14%, 1.0)				// InteractiveTertiaryDark10
	// IntAcTertiaryDark20						= hsla(202, 76%, 9%, 1.0)				// InteractiveTertiaryDark20
	// IntAcTertiaryDark30						= hsla(202, 76%, 4%, 1.0)				// InteractiveTertiaryDark30
	// IntAcTertiaryDark40						= hsla(202, 76%, 0%, 1.0)				// InteractiveTertiaryDark40

/// ─── Visa ───
	// VisPrimary								= #1434CB								// VisaBrandPrimary
	// VisPrimaryLight							= #3B57DE								// VisaBrandPrimaryLight
	// VisPrimaryDark							= #021E4C								// VisaBrandPrimaryDark
	// VisSecondary								= #FCC015								// VisaBrandSecondary
	// VisSecondaryLight						= #FFD700								// VisaBrandSecondaryLight
	// VisSecondaryDark							= #F7B600								// VisaBrandSecondaryDark
	// VisTertiary7								= #2C2C2C								// VisaBrandTertiary7
	// VisTertiary6								= #5C5C5C								// VisaBrandTertiary6
	// VisTertiary5								= #979797								// VisaBrandTertiary5
	// VisTertiary4								= #B9B9B9								// VisaBrandTertiary4
	// VisTertiary3								= #DEDEDE								// VisaBrandTertiary3
	// VisTertiary2								= #EEEEEE								// VisaBrandTertiary2
	// VisTertiary1								= #F7F7F7								// VisaBrandTertiary1

/// ─── Latam ───
	// LatRedBackground							= rgb(232, 17, 75)						// Latam Red Background

/// ─── Arbe Robotics ───
	// ARoPrimary								= #0035FF								// ArbePrimary
	// ARoPrimaryLight							= #0640FF								// ArbePrimaryLight
	// ARoSecondary		    					= #04ebff								// ArbeSecondary

/// ─── AutoX ───
	// AxPrimary								= #2253F0								// AutoXPrimary
	// AxPrimaryLight							= #0050F9								// AutoXPrimaryLight
	// AxSecondary								= #75ebc0								// AutoXSecondary

/// ─── EEG ───
	// EEGSkyBlue30								= #01EBF9								// EEGSkyBlue30
	// EEGSkyBlue40								= #00E7FD								// EEGSkyBlue40
	// EEGFucsia40								= #FF00B1								// EEGFucsia40
	// EEGFucsia50								= #FE0CB6								// EEGFucsia50

/// ─── Bright Line ───
BrLiYel10								= #FBFD73								// BrightLine Yellow Light
	// BrLiYel20								= #FFFD52								// BrightLine Yellow Light
	// BrLiYel30								= #FDF43C								// BrightLineB Yellow High
	// BrLiYel40								= #FEF301								// BrightLineBackground Yellow Nit
	// BrLiYel50								= #FFDB00								// BrightLineBackground Yellow Base

/// ─── Waves Beh ───
WavBehPink20							= #FFB7FF								// WavBehPink20
WavBehFucsia50							= #DF36DF								// WavBehFucsia50
	// WavBehNude10								= #FFFDDF								// WavBehNude10
	// WavBehSky70								= #06B7FE								// WavBehSky70
	// WavBehAqua50								= #0CF2F2								// WavBehAqua50

/// ─── Victoria Secret ───
	// VictSecPink20							= #EDB3DD								// VictSecPink20
VictSecPink50							= #E651CD								// VictSecPink50
VictSecFucsia50							= #EA1889								// VictSecFucsia50
	// VictSecWine30							= #C2329F								// VictSecWine30
	// VictSecWine50							= #7D1250								// VictSecWine50
	// VictSecWine60							= #7C2558								// VictSecWine60

/// ─── Mongo DB ───
	// MongoSky10								= #E3FCF7								// MongoDBSky10
	// MongoYellow50							= #FFE212								// MongoDBYellow50
	// MongoLime50								= #B1FF05								// MongoDBLime50
	// MongoGreen50								= #00ED64								// MongoDBGreen50
	// MongoGreen60								= #13AA52								// MongoDBGreen60
	// MongoGreen70								= #00684A								// MongoDBGreen70
	// MongoGreen80								= #014E3D								// MongoDBGreen80
	// MongoGray50								= #42494F								// MongoDBGray50
	// MongoGray70								= #001E2B								// MongoDBGray70
	// MongoBlack50								= #231F20								// MongoDBBlack50

/// ─── Platzi ───
PlatziGreen30							= #ADEB42								// PlatziGreen60
PlatziGreen40							= #85C638								// PlatziGreen60
	// PlatziGreen50							= #95CA3E								// PlatziGreen50
	// PlatziGreen60							= #98CA3F								// PlatziGreen40
PlatziBlue70							= #121F3D								// PlatziBlue70
PlatziBlue50							= #24385B								// PlatziBlue50
	// PlatziDark60								= #0C1633								// PlatziDark60

/// ─── Ultr ───
	// UltrBlueSky10							= #59F2E9								// UltrBlueSky10
	// UltrBlueSky20							= #39F0EA								// UltrBlueSky20
	// UltrMenta10								= #E0F9EF								// UltrMenta10
	// UltrMenta20								= #80F3EC								// UtlrMenta20
	// UltrMenta30								= #7FFFD4								// UltrMenta30
	// UltrMenta40								= #73FFCA								// UltrMenta40
	// UltrMenta50								= #9CFFD7								// UtlrMenta50
	// UltrMenta60								= #4fffc0								// UtlrMenta60
	// UltrGreen50								= #95BD5F								// UltrGreen50
	// UltrRose40								= #FFA3E3								// UltrRose
	// UltrFucsia30								= #ff6fd3								// UltrFucsia
	// UltrLyla									= #7E57C2								// UltrLyla
	// UltrLightGray							= #787B86								// UltrLightGray
	// UltrRedNit								= #de0011								// UltrRedNit
	// UltrRed									= #db004b								// UltrRed
	// UltrBlue									= #003bde								// UltrBlue
	// UltrYellow								= #f4de1a								// UltrYellow
	// UltrSkyBlue								= #12cef8								// UltrSkyBlue
	// UltrOrange								= #ff5a00								// UltrOrange

/// ─── Allen ───
AllenSky10								= #CCF8FF								// AllenSky10
	// AllenSky20								= #80F3EC								// AllenSky20
	// AllenSky50								= #01ebf9								// AllenSky50

	// AllenMint10								= #E0F9EF								// AllenMint10
	// AllenMint20								= #9CFFD7								// AllenMint20
	// AllenMint30								= #7FFFD4								// AllenMint30
	// AllenMint40								= #73FFCA								// AllenMint40
	// AllenMint50								= #4fffc0								// AllenMint50
AllenMint60								= #33FFAC								// AllenMint60

	// AllenFucsia30							= #E06BAA								// AllenFucsia30
	// AllenFucsia50							= #EA1889
	// AllenWine50								= #E91E63								// AllenWine50
AllenWine60								= #E8114B								// AllenWine60

//// ─────────────────────────────────────────────────────────────────────

//// ───────────────────────
/// ─── Vars ───
//// ───────────────────────

/// ─── Colors ───
tsiDivColorBaseBull					= PlatziGreen30
tsiDivColorBaseBear					= VictSecFucsia50

tsiDivColorBull						= color.new(PlatziGreen30,		0)
tsiDivColorBear						= color.new(VictSecFucsia50,	0)
tsiDivColorShapeBull				= color.new(PlatziGreen30,		30)
tsiDivColorShapeBear				= color.new(VictSecFucsia50,	30)
tsiDivColorHiddenBull				= color.new(PlatziGreen40,		30)
tsiDivColorHiddenBear				= color.new(WavBehFucsia50,		30)
tsiDivColorText						= color.new(PlatziBlue70,		0)
tsiDivColorNone						= color.new(AllenSky10,			100)
tsiDivColorTSI						= color.new(AllenSky10,			20)

/// ─── Inputs ───
tsiDivInputLong						= input(defval = 6,		title = 'Longitud de Compra')
tsiDivInputShort					= input(defval = 13,	title = 'Longitud de Venta')
tsiDivInputSignal					= input(defval = 4,		title = 'Longitud de la SEÑAL')

tsiDivInputPrice					= close[0]

/// ─── divergences ───
tsiDivDiverLBR						= input(defval = 5,		title = 'Corrección a la derecha')
tsiDivDiverLBL						= input(defval = 5,		title = 'Corrección a la izquierda')
tsiDivDiverRangeUpper				= input(defval = 30,	title = 'Rango de corrección maximo')
tsiDivDiverRangeLower				= input(defval = 2,		title = 'Rango de corrección minimo')

/// ─── Show ───
tsiDivShowPlotBull					= input(defval = true,	title = 'Mostrar Divergencia Alcista')
tsiDivShowPlotHiddenBull			= input(defval = true,	title = 'Mostrar Divergencia scalp Alcista')
tsiDivShowPlotBear					= input(defval = true,	title = 'Mostrar Divergencia Bajista')
tsiDivShowPlotHiddenBear			= input(defval = true,	title = 'Mostrar Divergencia scalp Bajista')
tsiDivShowCloudOn					= input(defval = true,	title = 'TSI Cloud')
tsiDivShowTSI						= input(defval = false,	title = 'TSI')

//// ───────────────────────
/// ─── Functions ───
//// ───────────────────────

double_smooth(src, tsiDivInputLong, tsiDivInputShort) =>
	fist_smooth = ta.ema(src, tsiDivInputLong)
	ta.ema(fist_smooth, tsiDivInputShort)

tsiDiFuPC							= ta.change(tsiDivInputPrice)
tsiDiFuDouble_smoothed_price		= double_smooth(tsiDiFuPC, tsiDivInputLong, tsiDivInputShort)
tsiDiFuDouble_smoothed_abs_price	= double_smooth(math.abs(tsiDiFuPC), tsiDivInputLong, tsiDivInputShort)
tsiDiFuTsi_value					= 68 * (tsiDiFuDouble_smoothed_price / tsiDiFuDouble_smoothed_abs_price) + 50
// tsiDiFuTsi_value					= tsiDiFuDouble_smoothed_price / tsiDiFuDouble_smoothed_abs_price * 65 + 50
tsiDiFuLagLine						= ta.ema(tsiDiFuTsi_value, tsiDivInputSignal)

/// ─── Plot data ───
tsiDiFuFillColor					= tsiDivShowCloudOn and tsiDiFuTsi_value > tsiDiFuLagLine ? tsiDivColorBull : tsiDivShowCloudOn and tsiDiFuTsi_value <= tsiDiFuLagLine ? tsiDivColorBear : na

tsiDiFuLine1						= plot(tsiDiFuTsi_value,	color = color.new(tsiDiFuFillColor, 50))
tsiDiFuLine2						= plot(ta.ema(tsiDiFuTsi_value,	tsiDivInputSignal),	color = color.new(tsiDiFuFillColor, 50))
hline(0,	title = 'Zero',	color = color.new(#000000, 50),	editable = true)

/// ─── Colour fill ───
tsiDiFuCloudColor					= tsiDivShowCloudOn and tsiDiFuTsi_value > tsiDiFuLagLine ? tsiDivColorBaseBull : tsiDivShowCloudOn and tsiDiFuTsi_value <= tsiDiFuLagLine ? tsiDivColorBaseBear : na

fill(tsiDiFuLine1,	tsiDiFuLine2,	color = color.new(tsiDiFuCloudColor, 70))

tsiDiFuTSI							= tsiDiFuTsi_value
tsiDiFuOSC							= tsiDiFuTSI

tsiDivDiTSIPlot						= plot(tsiDivShowTSI ? tsiDiFuOSC : na, linewidth = 2, color = tsiDivColorTSI, title = 'TSI')

tsiDiFuPLFound						= na(ta.pivotlow(tsiDiFuOSC, tsiDivDiverLBL, tsiDivDiverLBR)) ? false : true
tsiDiFuPHFound						= na(ta.pivothigh(tsiDiFuOSC, tsiDivDiverLBL, tsiDivDiverLBR)) ? false : true

_inRange(cond) =>
	tsiDiFuBars						= ta.barssince(cond == true)
	tsiDivDiverRangeLower			<= tsiDiFuBars and tsiDiFuBars <= tsiDivDiverRangeUpper

//// ───────────────────────
/// ─── SHOW DIVERGENCES ───
//// ───────────────────────

//// ───────────────────────
/// ─── Regular Bullish ───
//// ───────────────────────

/// ─── Osc: Higher Low ───
tsiDiInsOSCHL						= tsiDiFuOSC[tsiDivDiverLBR] > ta.valuewhen(tsiDiFuPLFound, tsiDiFuOSC[tsiDivDiverLBR], 1) and _inRange(tsiDiFuPLFound[1])

/// ─── Price: Lower Low ───
tsiDiInsPRICELL						= low[tsiDivDiverLBR] < ta.valuewhen(tsiDiFuPLFound, low[tsiDivDiverLBR], 1)

tsiDiInsBULLCond					= tsiDivShowPlotBull and tsiDiInsPRICELL and tsiDiInsOSCHL and tsiDiFuPLFound

plot(tsiDiFuPLFound ? tsiDiFuOSC[tsiDivDiverLBR] : na, offset = -tsiDivDiverLBR, title = 'Confirmacion de Compra', linewidth = 2, color = tsiDiInsBULLCond ? tsiDivColorBull : tsiDivColorNone)

plotshape(tsiDiInsBULLCond ? tsiDiFuOSC[tsiDivDiverLBR] : na, offset = -tsiDivDiverLBR, title = 'Etiqueta de Compra', text = ' Compra ', style = shape.labelup, location = location.absolute, color = tsiDivColorShapeBull, textcolor = tsiDivColorText)

alertcondition(tsiDiInsBULLCond, title = 'TSI ha encontrado una divergencia Alcista', message = 'Verifique en gráfico por confirmación de COMPRA por TSI')

//// ───────────────────────
/// ─── Hidden Bullish ───
//// ───────────────────────

/// ─── Osc: Lower Low ───
tsiDiInsOSCLL						= tsiDiFuOSC[tsiDivDiverLBR] < ta.valuewhen(tsiDiFuPLFound, tsiDiFuOSC[tsiDivDiverLBR], 1) and _inRange(tsiDiFuPLFound[1])

/// ─── Price: Higher Low ───
tsiDiInsPRICEHL = low[tsiDivDiverLBR] > ta.valuewhen(tsiDiFuPLFound, low[tsiDivDiverLBR], 1)

tsiDiInsHiddenBullCond				= tsiDivShowPlotHiddenBull and tsiDiInsPRICEHL and tsiDiInsOSCLL and tsiDiFuPLFound

plot(tsiDiFuPLFound ? tsiDiFuOSC[tsiDivDiverLBR] : na, offset = -tsiDivDiverLBR, title = 'Confirmación de Compra scalp', linewidth = 2, color = tsiDiInsHiddenBullCond ? tsiDivColorHiddenBull : tsiDivColorNone)

plotshape(tsiDiInsHiddenBullCond ? tsiDiFuOSC[tsiDivDiverLBR] : na, offset = -tsiDivDiverLBR, title = 'Etiqueta de Compra scalp', text = ' Compra Scalp ', style = shape.labelup, location = location.absolute, color=tsiDivColorShapeBull, textcolor = tsiDivColorText)

alertcondition(tsiDiInsHiddenBullCond, title = 'TSI ha encontrado una divergencia Alcista oculta', message = 'Verifique en gráfico por confirmación de COMPRA scalp por TSI por TSI')

//// ───────────────────────
/// ─── Regular Bearish ───
//// ───────────────────────

/// ─── Osc: Lower High ───
tsiDiInsOSCLH						= tsiDiFuOSC[tsiDivDiverLBR] < ta.valuewhen(tsiDiFuPHFound, tsiDiFuOSC[tsiDivDiverLBR], 1) and _inRange(tsiDiFuPHFound[1])

/// ─── Price: Higher High ───
tsiDiInsPRICEHH						= high[tsiDivDiverLBR] > ta.valuewhen(tsiDiFuPHFound, high[tsiDivDiverLBR], 1)

tsiDiInsBEARCond					= tsiDivShowPlotBear and tsiDiInsPRICEHH and tsiDiInsOSCLH and tsiDiFuPHFound

plot(tsiDiFuPHFound ? tsiDiFuOSC[tsiDivDiverLBR] : na, offset = -tsiDivDiverLBR, title = 'Confirmación de Venta', linewidth = 2, color = tsiDiInsBEARCond ? tsiDivColorBear : tsiDivColorNone)

plotshape(tsiDiInsBEARCond ? tsiDiFuOSC[tsiDivDiverLBR] : na, offset = -tsiDivDiverLBR, title = 'Etiqueta de Venta', text = ' Venta ', style = shape.labeldown, location = location.absolute, color = tsiDivColorShapeBear, textcolor = tsiDivColorText)

alertcondition(tsiDiInsBEARCond, title = 'TSI ha encontrado una divergencia Bajista', message = 'Verifique en gráfico por confirmación de VENTA por TSI')

//// ───────────────────────
/// ─── Hidden Bearish ───
//// ───────────────────────

/// ─── Osc: Higher High ───
tsiDiInsOSCHH						= tsiDiFuOSC[tsiDivDiverLBR] > ta.valuewhen(tsiDiFuPHFound, tsiDiFuOSC[tsiDivDiverLBR], 1) and _inRange(tsiDiFuPHFound[1])

/// ─── Price: Lower High ───
tsiDiInsPRICELH						= high[tsiDivDiverLBR] < ta.valuewhen(tsiDiFuPHFound, high[tsiDivDiverLBR], 1)

tsiDiInsHiddenBearCond				= tsiDivShowPlotHiddenBear and tsiDiInsPRICELH and tsiDiInsOSCHH and tsiDiFuPHFound

plot(tsiDiFuPHFound ? tsiDiFuOSC[tsiDivDiverLBR] : na, offset = -tsiDivDiverLBR, title = 'Confirmación de Venta scalp', linewidth = 2, color = tsiDiInsHiddenBearCond ? tsiDivColorHiddenBear : tsiDivColorNone)

plotshape(tsiDiInsHiddenBearCond ? tsiDiFuOSC[tsiDivDiverLBR] : na, offset = -tsiDivDiverLBR, title = 'Etiqueta de Venta scalp', text = ' Venta Scalp ', style = shape.labeldown, location = location.absolute, color = tsiDivColorShapeBear, textcolor = tsiDivColorText)

alertcondition(tsiDiInsHiddenBearCond, title = 'TSI ha encontrado una divergencia Bajista oculta', message = 'Verifique en gráfico por confirmación de VENTA scalp por TSI')

//// ─────────────────────────────────────────────────────────────────────
